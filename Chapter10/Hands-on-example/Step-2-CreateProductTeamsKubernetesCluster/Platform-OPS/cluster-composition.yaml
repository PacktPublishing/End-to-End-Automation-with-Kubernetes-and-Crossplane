apiVersion: apiextensions.crossplane.io/v1
kind: Composition
metadata:
  name: xcluster-dev
spec:
  writeConnectionSecretsToNamespace: crossplane-system
  compositeTypeRef:
    apiVersion: learn.unified.devops/v1alpha1
    kind: XGCPCluster
  resources:
  - name: gke-dev-cluster
    base:
      apiVersion: container.gcp.crossplane.io/v1beta2
      kind: Cluster
      spec: 
        forProvider:
          location: us-west2
          loggingService: logging.googleapis.com/kubernetes
          monitoringService: monitoring.googleapis.com/kubernetes
    patches:
    - fromFieldPath: spec.claimRef.namespace
      toFieldPath: spec.providerConfigRef.name
    - fromFieldPath: spec.claimRef.name
      toFieldPath: metadata.name
    - fromFieldPath: spec.claimRef.namespace
      toFieldPath: spec.writeConnectionSecretToRef.namespace
    - fromFieldPath: spec.claimRef.name
      toFieldPath: spec.writeConnectionSecretToRef.name
      transforms:
        - type: string
          string:
            fmt: "%s-secret"
  - name: gke-dev-cluster-nodepool
    base:
      apiVersion: container.gcp.crossplane.io/v1beta1
      kind: NodePool
      spec:
        forProvider:
          autoscaling:
            autoprovisioned: false
            enabled: true
            minNodeCount: 4
          config:
            machineType: e2-medium
          initialNodeCount: 4
          locations:
            - "us-west2-a"
    patches:
    - fromFieldPath: spec.claimRef.namespace
      toFieldPath: spec.providerConfigRef.name
    - fromFieldPath: spec.claimRef.name
      toFieldPath: spec.forProvider.clusterRef.name
    - fromFieldPath: spec.parameters.nodeCount
      toFieldPath: spec.forProvider.autoscaling.maxNodeCount
    - type: FromCompositeFieldPath
      fromFieldPath: spec.parameters.size
      toFieldPath: spec.forProvider.config.machineType
      transforms:
      - type: map
        map:
          BIG: e2-medium
          SMALL: e2-small
  - name: gke-dev-cluster-helm-provider-config
    base:
      apiVersion: helm.crossplane.io/v1beta1
      kind: ProviderConfig
      spec:
        identity:
          type: GoogleApplicationCredentials
          source: Secret
          secretRef:
            name: gcp-account
            namespace: crossplane-system
            key: service-account
        credentials:
          source: Secret
          secretRef:
            key: kubeconfig
    patches:
    - fromFieldPath: spec.claimRef.namespace
      toFieldPath: spec.credentials.secretRef.namespace
    - fromFieldPath: spec.claimRef.name
      toFieldPath: spec.credentials.secretRef.name
      transforms:
        - type: string
          string:
            fmt: "%s-secret"
    - fromFieldPath: spec.claimRef.name
      toFieldPath: metadata.name
      transforms:
        - type: string
          string:
            fmt: "%s-helm-provider-config"
    readinessChecks:
    - type: None
  - name: gke-dev-cluster-k8s-provider-config
    base:
      apiVersion: kubernetes.crossplane.io/v1alpha1
      kind: ProviderConfig
      spec:
        identity:
          type: GoogleApplicationCredentials
          source: Secret
          secretRef:
            name: gcp-account
            namespace: crossplane-system
            key: service-account
        credentials:
          source: Secret
          secretRef:
            key: kubeconfig
    patches:
    - fromFieldPath: spec.claimRef.namespace
      toFieldPath: spec.credentials.secretRef.namespace
    - fromFieldPath: spec.claimRef.name
      toFieldPath: spec.credentials.secretRef.name
      transforms:
        - type: string
          string:
            fmt: "%s-secret"
    - fromFieldPath: spec.claimRef.name
      toFieldPath: metadata.name
      transforms:
        - type: string
          string:
            fmt: "%s-k8s-provider-config"
    readinessChecks:
    - type: None
  - name: gke-dev-cluster-argocd-setup
    base:
      apiVersion: helm.crossplane.io/v1beta1
      kind: Release
      spec:
        forProvider:
          chart:
            name: argo-cd
            repository: https://argoproj.github.io/argo-helm
            version: 2.3.3
          namespace: argocd
          set:
            - name: server.service.type
              value: LoadBalancer
    patches:
    - fromFieldPath: spec.claimRef.name
      toFieldPath: metadata.name
      transforms:
        - type: string
          string:
            fmt: "%s-helm-argocd"
    - fromFieldPath: spec.claimRef.name
      toFieldPath: spec.providerConfigRef.name
      transforms:
        - type: string
          string:
            fmt: "%s-helm-provider-config"