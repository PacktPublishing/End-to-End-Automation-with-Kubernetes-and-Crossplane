apiVersion: apiextensions.crossplane.io/v1
kind: Composition
metadata:
  name: resource-iam-credentials
spec:
  compositeTypeRef:
    apiVersion: reference.imarunrk.com/v1
    kind: XIAMWithCredential
  resources:
  # Create IAM user
  - base:
      apiVersion: iam.aws.crossplane.io/v1beta1
      kind: User
      spec:
        providerConfigRef:
          name: aws-credentials
        forProvider:
          path: "/"
    patches:
    # patch the name of IAM user with dynamic placeholder 
    # user-<Parent Resource Type>-<Parent Resource name>
    - type: CombineFromComposite
      toFieldPath: metadata.name
      combine:
        variables:
        - fromFieldPath: spec.parameters.resourceType
        - fromFieldPath: spec.parameters.resourceName
        strategy: string
        string:
          fmt: "user-%s-%s"
  # Attach the resource policy with the IAM User 
  - base:
      apiVersion: iam.aws.crossplane.io/v1beta1
      kind: UserPolicyAttachment
      spec:
        providerConfigRef:
          name: aws-credentials
        forProvider:
          # refer to the IAM user from the same composition using matchControllerRef
          userNameSelector:
            matchControllerRef: true
    patches:
    # Patch the policy resource name with standerd name construction
    # <Resource Type>-<Parent Resource Type>-<Parent Resource name>
    - type: CombineFromComposite
      toFieldPath: metadata.name
      combine:
        variables:
        - fromFieldPath: spec.parameters.resourceType
        - fromFieldPath: spec.parameters.resourceName
        strategy: string
        string:
          fmt: "policy-attachement-%s-%s"
    # Patch the policy ARN reference
    - toFieldPath: spec.forProvider.policyArn
      fromFieldPath: spec.parameters.policyARN
  - base:
      apiVersion: iam.aws.crossplane.io/v1beta1
      kind: AccessKey
      spec:
        providerConfigRef:
          name: aws-credentials
        forProvider:
          # refer to the IAM user from the same composition using matchControllerRef
          userNameSelector:
            matchControllerRef: true
    patches:
    # Patch the resource name with standerd name construction
    # <Resource Type>-<Parent Resource Type>-<Parent Resource name>
    - type: CombineFromComposite
      toFieldPath: metadata.name
      combine:
        variables:
        - fromFieldPath: spec.parameters.resourceType
        - fromFieldPath: spec.parameters.resourceName
        strategy: string
        string:
          fmt: "iam-access-%s-%s"
    # Namespace to save the secret same as the resource namespace
    - fromFieldPath: spec.parameters.secretNamespace
      toFieldPath: spec.writeConnectionSecretToRef.namespace
    # Generate and patch the kubernete secret name 
    - type: CombineFromComposite
      toFieldPath: spec.writeConnectionSecretToRef.name
      combine:
        variables:
        - fromFieldPath: spec.parameters.resourceType
        - fromFieldPath: spec.parameters.resourceName
        strategy: string
        string:
          fmt: "credentials-%s-%s"
    # Populate the connection secret keys from AccessKey secrets
    connectionDetails:
    - name: iam_username
      fromConnectionSecretKey: username
    - name: iam_password
      fromConnectionSecretKey: password