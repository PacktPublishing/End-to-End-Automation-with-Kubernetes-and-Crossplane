apiVersion: apiextensions.crossplane.io/v1
kind: Composition
metadata:
  name: resource-iam
spec:
  compositeTypeRef:
    apiVersion: differentxr.reference.imarunrk.com/v1
    kind: XIAMResourceUser
  resources:
  # Create IAM user
  - base:
      apiVersion: iam.aws.crossplane.io/v1beta1
      kind: User
      spec:
        providerConfigRef:
          name: aws-credentials
        forProvider:
          path: "/"
    patches:
    # patch the name of IAM user with dynamic placeholder 
    # user-<Parent Resource Type>-<Parent Resource name>
    - type: CombineFromComposite
      toFieldPath: metadata.name
      combine:
        variables:
        - fromFieldPath: spec.parameters.resourceType
        - fromFieldPath: spec.parameters.resourceName
        strategy: string
        string:
          fmt: "user-%s-%s"
  # Attach the resource policy with the IAM User 
  - base:
      apiVersion: iam.aws.crossplane.io/v1beta1
      kind: UserPolicyAttachment
      spec:
        providerConfigRef:
          name: aws-credentials
        forProvider:
          # refer to the IAM user from the same composition using matchControllerRef
          userNameSelector:
            matchControllerRef: true
          policyArnSelector:
            matchControllerRef: false
    patches:
    # Patch the policy ARN lable 1
    - toFieldPath: spec.forProvider.policyArnSelector.matchLabels.resourceName
      fromFieldPath: spec.parameters.resourceName
    # Patch the policy ARN lable 2
    - toFieldPath: spec.forProvider.policyArnSelector.matchLabels.resourceType
      fromFieldPath: spec.parameters.resourceType
    # Patch the policy resource name with standerd name construction
    # <Resource Type>-<Parent Resource Type>-<Parent Resource name>
    - type: CombineFromComposite
      toFieldPath: metadata.name
      combine:
        variables:
        - fromFieldPath: spec.parameters.resourceType
        - fromFieldPath: spec.parameters.resourceName
        strategy: string
        string:
          fmt: "policy-attachement-%s-%s"   